<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Cyril Rohr - Journal</title>
 <link href="http://feeds.feedburner.com/crohr" rel="self"/>
 <link href="http://crohr.me/"/>
 <updated>2014-10-15T07:17:10+00:00</updated>
 <id>http://crohr.me/</id>
 <author>
   <name>Cyril Rohr</name>
   <email>contact@crohr.me</email>
 </author>

 
 <entry>
   <title>How to generate a self-signed certificate in non interactive mode</title>
   <link href="http://crohr.me/journal/2014/generate-self-signed-ssl-certificate-without-prompt-noninteractive-mode.html"/>
   <updated>2014-07-10T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2014/generate-self-signed-ssl-certificate-without-prompt-noninteractive-mode</id>
   <content type="html">&lt;p&gt;If you ever need to generate a self-signed SSL certificate automatically (i.e. without any prompt or interactive questions), here is how you would do it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;openssl genrsa -des3 -passout pass:x -out server.pass.key 2048
openssl rsa -passin pass:x -in server.pass.key -out server.key
rm server.pass.key
openssl req -new -key server.key -out server.csr \
  -subj &quot;/C=UK/ST=Warwickshire/L=Leamington/O=OrgName/OU=IT Department/CN=example.com&quot;
openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(adapted from &lt;a href=&quot;https://devcenter.heroku.com/articles/ssl-certificate-self&quot;&gt;Heroku’s procedure&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Then, just use the generated &lt;code&gt;server.key&lt;/code&gt; and &lt;code&gt;server.crt&lt;/code&gt; files.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fixing postgres UTF-8 encoding error when creating new databases</title>
   <link href="http://crohr.me/journal/2014/postgres-rails-the-chosen-lc-ctype-setting-requires-encoding-latin1.html"/>
   <updated>2014-05-13T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2014/postgres-rails-the-chosen-lc-ctype-setting-requires-encoding-latin1</id>
   <content type="html">&lt;p&gt;Quick tip, mainly as a reference for myself.&lt;/p&gt;

&lt;p&gt;I wanted to create a new postgres database from Rails, here is what I did:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install -y postgresql-9.1
$ sudo -u postgres createuser myuser --createdb --no-superuser --no-createrole
$ ./bin/rake db:create
PG::InvalidParameterValue: ERROR:  encoding UTF8 does not match locale en_US
DETAIL:  The chosen LC_CTYPE setting requires encoding LATIN1.
: CREATE DATABASE &quot;my-database&quot; ENCODING = &#39;utf8&#39;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looks like my locales are wrong. Here was the result of calling &lt;code&gt;locale&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ locale
LANG=en_US.UTF-8
LANGUAGE=
LC_CTYPE=&quot;en_US&quot;
LC_NUMERIC=&quot;en_US&quot;
LC_TIME=&quot;en_US&quot;
LC_COLLATE=&quot;en_US&quot;
LC_MONETARY=&quot;en_US&quot;
LC_MESSAGES=&quot;en_US&quot;
LC_PAPER=&quot;en_US&quot;
LC_NAME=&quot;en_US&quot;
LC_ADDRESS=&quot;en_US&quot;
LC_TELEPHONE=&quot;en_US&quot;
LC_MEASUREMENT=&quot;en_US&quot;
LC_IDENTIFICATION=&quot;en_US&quot;
LC_ALL=en_US
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see, I have &lt;code&gt;en_US&lt;/code&gt; values that should be &lt;code&gt;en_US.UTF-8&lt;/code&gt; instead. Looking on the internet, you can see various ways of fixing it for a specific database by creating the database directly with the &lt;code&gt;psql&lt;/code&gt; CLI, and forcing &lt;code&gt;lc_ctype&lt;/code&gt; &amp;amp; co.&lt;/p&gt;

&lt;p&gt;To definitely fix it, the fastest way I found is to do as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Make sure you’ve got your locale properly generated:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ sudo locale-gen en_US.UTF-8
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Update the &lt;code&gt;/etc/default/locale&lt;/code&gt; file with the corresponding variables (or use &lt;code&gt;update-locale LANG=xx LC_CTYPE=xx ...&lt;/code&gt;):&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ sudo cat - &amp;gt; /etc/default/locale &amp;lt;&amp;lt;EOF
 LANG=en_US.UTF-8
 LANGUAGE=
 LC_CTYPE=&quot;en_US.UTF-8&quot;
 LC_NUMERIC=&quot;en_US.UTF-8&quot;
 LC_TIME=&quot;en_US.UTF-8&quot;
 LC_COLLATE=&quot;en_US.UTF-8&quot;
 LC_MONETARY=&quot;en_US.UTF-8&quot;
 LC_MESSAGES=&quot;en_US.UTF-8&quot;
 LC_PAPER=&quot;en_US.UTF-8&quot;
 LC_NAME=&quot;en_US.UTF-8&quot;
 LC_ADDRESS=&quot;en_US.UTF-8&quot;
 LC_TELEPHONE=&quot;en_US.UTF-8&quot;
 LC_MEASUREMENT=&quot;en_US.UTF-8&quot;
 LC_IDENTIFICATION=&quot;en_US.UTF-8&quot;
 LC_ALL=en_US.UTF-8
 EOF
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Remove postgres (necessary because it looks like the default postgres locale is set at install time based on your system’s locale):&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ sudo apt-get remove postgresql-9.1 ...
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reinstall postgres&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ sudo apt-get install postgresql-9.1
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open a new terminal session (you can also probably just reload your &lt;code&gt;~/.bashrc&lt;/code&gt;), and start again:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; $ sudo -u postgres createuser myuser --createdb --no-superuser --no-createrole
 $ ./bin/rake db:create
 # success!
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is most probably not the easiest way to do it (please let me know in the comments), but it works.&lt;/p&gt;

&lt;p&gt;Conclusion: Next time, always make sure you correctly set the locales before installing anything :)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Packaging and sharing your Rails app, the easy way</title>
   <link href="http://crohr.me/journal/2014/how-to-get-a-debian-package-out-of-your-rails-app-and-host-it-on-s3.html"/>
   <updated>2014-04-14T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2014/how-to-get-a-debian-package-out-of-your-rails-app-and-host-it-on-s3</id>
   <content type="html">&lt;p&gt;Software packaging is a kind of a dark art for many people, due in most part to packaging manuals and &lt;a href=&quot;https://www.debian.org/doc/debian-policy/&quot;&gt;policies&lt;/a&gt; that are hard to understand for the busy developer, but most importantly do not address well the needs of developers who want to package a full web app (i.e. with rapidly evolving libraries, latest runtime).&lt;/p&gt;

&lt;p&gt;Today I want to introduce two tools, &lt;a href=&quot;https://github.com/crohr/pkgr&quot;&gt;pkgr&lt;/a&gt; and &lt;a href=&quot;https://github.com/krobertson/deb-s3&quot;&gt;deb-s3&lt;/a&gt;, which will allow you to respectively package a rails app, and host the resulting debian package on S3, all without the need to know about any of the debian packaging rules.&lt;/p&gt;

&lt;h2 id=&quot;why-package-at-all&quot;&gt;Why package at all?&lt;/h2&gt;

&lt;p&gt;Packaging your app, as opposed to just sending tarballs or cloning git repos, has many advantages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;easy distribution&lt;/strong&gt;: just add a new APT repository and you can fetch the app immediately.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;easy installation&lt;/strong&gt;: &lt;code&gt;apt-get install my-app&lt;/code&gt; and you’re done.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;fast installation&lt;/strong&gt;: no need to compile anything on the server.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;improved reliability&lt;/strong&gt;: if you’ve tested that it works on one server, deploying to many servers is a no-brainer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Up until now, it was quite an undertaking to try packaging a Rails app all by yourself. You could use tools such as &lt;a href=&quot;https://github.com/jordansissel/fpm&quot;&gt;FPM&lt;/a&gt; to generate your package and any dependencies your application requires, but the main goal of FPM is to abstract package managers, not necessarily simplify the packaging of a full app with many dependencies. Omnibus is another option, but then you basically embed a full OS into your package, and the recent &lt;a href=&quot;http://heartbleed.com&quot;&gt;heartbleed&lt;/a&gt; vulnerability shows that it’s probably not such a good idea. Also you still had to figure out how to host the packages.&lt;/p&gt;

&lt;p&gt;So, let’s start this tutorial with pkgr, the tool that will allow you to generate a debian package out of your app&lt;/p&gt;

&lt;h2 id=&quot;prerequisites-get-hold-of-a-debian-based-vm&quot;&gt;Prerequisites: get hold of a debian-based VM&lt;/h2&gt;

&lt;p&gt;pkgr needs to be run on the system you build the package for. That means that if you want a package for Ubuntu 12.04 (Precise), go ahead and find a machine with that distribution. You could use Vagrant, docker, or just click on the following link to start an official Ubuntu 12.04 AMI on Amazon EC2: &lt;a href=&quot;https://console.aws.amazon.com/ec2/home?region=us-east-1#launchAmi=ami-5db4a934&quot;&gt;https://console.aws.amazon.com/ec2/home?region=us-east-1#launchAmi=ami-5db4a934&lt;/a&gt; (list of available Ubuntu AMIs &lt;a href=&quot;http://uec-images.ubuntu.com/releases/precise/release/&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Then, setup the build VM:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get install -y build-essential rng-tools git ruby1.9.1-full rubygems1.9.1
$ sudo gem install pkgr deb-s3 --no-ri --no-rdoc
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;generating-a-debian-package-with-pkgr&quot;&gt;Generating a debian package with pkgr&lt;/h2&gt;

&lt;p&gt;pkgr is basically Heroku buildpacks + FPM + peripheral stuff (init scripts, cli, etc.). If you like the way you deploy apps on Heroku, you’ll probably like packaging your app.&lt;/p&gt;

&lt;h3 id=&quot;get-some-rails-app-to-package&quot;&gt;Get some Rails app to package&lt;/h3&gt;

&lt;p&gt;The example app we’ll use is a blank Rails4 app, using postgres as the database. Note that you should be able to package any Ruby app (starting with Ruby1.8.7), with any type of database, gems, etc.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir ~/apps
$ cd ~/apps
$ git clone https://github.com/pkgr/rails4-example-app.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;start-the-packaging-process&quot;&gt;Start the packaging process&lt;/h3&gt;

&lt;p&gt;Note: The &lt;code&gt;--auto&lt;/code&gt; option will try to automatically install missing build dependencies with &lt;code&gt;apt-get&lt;/code&gt;, which means it can take some time before you see the &lt;code&gt;-----&amp;gt; Ruby app&lt;/code&gt; line on a fresh build machine:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pkgr package ~/apps/rails4-example-app --auto
-----&amp;gt; Ruby app
-----&amp;gt; Compiling Ruby/Rails
-----&amp;gt; Using Ruby version: ruby-2.0.0
-----&amp;gt; Installing dependencies using 1.5.2
       Running: bundle install --without development:test --path vendor/bundle --binstubs vendor/bundle/bin -j4 --deployment
       Fetching gem metadata from https://rubygems.org/..........
       Fetching additional metadata from https://rubygems.org/..
       Installing minitest (5.3.2)
       Installing i18n (0.6.9)
       Installing rake (10.2.2)
       Installing thread_safe (0.3.3)
       Installing builder (3.2.2)
       Installing mime-types (1.25.1)
       Installing erubis (2.7.0)
       Installing polyglot (0.3.4)
       ...
       Installing turbolinks (2.2.2)
       Installing sass-rails (4.0.3)
       Installing rails (4.1.0)
       Installing pg (0.17.1)
       Your bundle is complete!
       Gems in the groups development and test were not installed.
       It was installed into ./vendor/bundle
       Post-install message from rdoc:
       Depending on your version of ruby, you may need to install ruby rdoc/ri data:
       &amp;lt;= 1.8.6 : unsupported
       = 1.8.7 : gem install rdoc-data; rdoc-data --install
       = 1.9.1 : gem install rdoc-data; rdoc-data --install
       &amp;gt;= 1.9.2 : nothing to do! Yay!
       Bundle completed (92.63s)
       Cleaning up the bundler cache.
-----&amp;gt; Preparing app for Rails asset pipeline
       Running: rake assets:precompile
       I, [2014-04-14T09:57:53.391958 #18689]  INFO -- : Writing /tmp/d20140414-15482-1nlncju/opt/rails4-example-app/public/assets/application-59ffd4525232837e51088483ed301f44.js
       I, [2014-04-14T09:57:53.624426 #18689]  INFO -- : Writing /tmp/d20140414-15482-1nlncju/opt/rails4-example-app/public/assets/application-9cc0575249625b8d8648563841072913.css
       Asset precompilation completed (15.65s)
       Cleaning assets
       Running: rake assets:clean
-----&amp;gt; WARNINGS:
       Include &#39;rails_12factor&#39; gem to enable all platform features
       See https://devcenter.heroku.com/articles/rails-integration-gems for more information.

       You have not declared a Ruby version in your Gemfile.
       To set your Ruby version add this line to your Gemfile:
       ruby &#39;2.0.0&#39;
       # See https://devcenter.heroku.com/articles/ruby-versions for more information.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see, the tool detected that we had a Ruby app, fetched the corresponding Ruby version (2.0.0), and then installed all the required gems. If the process successfully ended, you should now have a &lt;code&gt;.deb&lt;/code&gt; file containing the result of that building process, in the directory from where you launched the &lt;code&gt;pkgr&lt;/code&gt; command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls -t
rails4-example-app_0.0.0-20140414100914_amd64.deb  config.ru  log     vendor   Gemfile.lock
bin                                                db         public  app      Rakefile
config                                             lib        test    Gemfile  README.rdoc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Please refer to the &lt;a href=&quot;https://github.com/crohr/pkgr&quot;&gt;pkgr&lt;/a&gt; website to know more about the various options you can pass to the &lt;code&gt;package&lt;/code&gt; command. Also, further calls to the &lt;code&gt;package&lt;/code&gt; command will be much faster, since the result of the &lt;code&gt;bundle install&lt;/code&gt; runs are cached.&lt;/p&gt;

&lt;p&gt;Now, let’s release the newly generated package on S3!&lt;/p&gt;

&lt;h2 id=&quot;host-your-newly-created-debian-package-on-s3&quot;&gt;Host your newly created debian package on S3&lt;/h2&gt;

&lt;h3 id=&quot;create-a-new-gpg-key&quot;&gt;Create a new gpg key&lt;/h3&gt;

&lt;p&gt;This will be used to sign the release file of your APT repository. If you don’t already have a gpg key you want to use, then you can generate a new one by doing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo rngd -r /dev/urandom # needed to generate enough entropy on remote servers
$ gpg --gen-key # choose default options, enter a name and email address, and you can choose to keep the passphrase blank if you wish.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should now have a new gpg secret key:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gpg --list-secret-keys
/home/ubuntu/.gnupg/secring.gpg
-------------------------------
sec   2048R/CF0B4573 2014-04-14
uid                  Cyril Rohr &amp;lt;hi@pkgr.io&amp;gt;
ssb   2048R/7198E0E7 2014-04-14
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note the key ID (here: CF0B4573).
Also, for all things related to gpg, this &lt;a href=&quot;http://irtfweb.ifa.hawaii.edu/~lockhart/gpg/gpg-cs.html&quot;&gt;cheatsheet&lt;/a&gt; can be useful.&lt;/p&gt;

&lt;h3 id=&quot;upload-the-debian-package&quot;&gt;Upload the debian package&lt;/h3&gt;

&lt;p&gt;This part assumes that you have signed up for an Amazon AWS account, and that you have created a new S3 bucket to host your APT repository. We’ll be using the &lt;code&gt;deb-s3&lt;/code&gt; tool to manage our APT repository on S3. The good thing about deb-s3 is that it does not need to keep the full repository in sync on the disk: it just updates the metadata files when you add a new package.&lt;/p&gt;

&lt;p&gt;Let’s set up a few environment variables:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ export S3_BUCKET=&quot;my-apt-bucket&quot;
$ export AWS_ACCESS_KEY=&quot;key&quot;
$ export AWS_SECRET_KEY=&quot;secret&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, upload your package:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ deb-s3 upload \
  --bucket ${S3_BUCKET} \
  --codename precise \
  --component master \
  --preserve-versions \
  --visibility public \
  --access-key-id &quot;${AWS_ACCESS_KEY}&quot; \
  --secret-access-key &quot;${AWS_SECRET_KEY}&quot; \
  --sign CF0B4573 \
  ~/apps/rails4-example-app/rails4-example-app_0.0.0-20140414100914_amd64.deb
&amp;gt;&amp;gt; Retrieving existing manifests
&amp;gt;&amp;gt; Examining package file rails4-example-app_0.0.0-20140414100914_amd64.deb
&amp;gt;&amp;gt; Uploading packages and new manifests to S3
   -- Transferring pool/r/ra/rails4-example-app_0.0.0-20140414100914_amd64.deb
   -- Transferring dists/precise/master/binary-amd64/Packages
   -- Transferring dists/precise/master/binary-amd64/Packages.gz
   -- Transferring dists/precise/master/binary-i386/Packages
   -- Transferring dists/precise/master/binary-i386/Packages.gz
   -- Transferring dists/precise/Release
   -- Transferring dists/precise/Release.gpg
&amp;gt;&amp;gt; Update complete.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That’s it, you now have a debian package hosted on S3!&lt;/p&gt;

&lt;p&gt;Now, let’s see how your users can install it, and launch the application.&lt;/p&gt;

&lt;h2 id=&quot;install-the-package-from-the-newly-created-apt-repository&quot;&gt;Install the package from the newly created APT repository&lt;/h2&gt;

&lt;p&gt;Add a new entry to your list of APT repositories:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo &quot;deb https://s3.amazonaws.com/my-apt-bucket precise master&quot; | sudo tee /etc/apt/sources.list.d/my-repo.list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Import the public gpg key (replace &lt;code&gt;CF0B4573&lt;/code&gt; with your key ID), so that APT knows about your signature:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gpg --export -a &quot;CF0B4573&quot; | sudo apt-key add -
OK
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: In the real world, your public key would probably be hosted in your S3 bucket, and users would retrieve it like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wget -qO - https://s3.amazonaws.com/my-apt-bucket/key | sudo apt-key add -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, install the package:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get install -y rails4-example-app
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following extra packages will be installed:
  libreadline5
The following NEW packages will be installed:
  libreadline5 rails4-example-app
0 upgraded, 2 newly installed, 0 to remove and 26 not upgraded.
Need to get 24.9 MB of archives.
After this operation, 87.1 MB of additional disk space will be used.
Get:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu/ precise/main libreadline5 amd64 5.2-11 [128 kB]
Get:2 https://s3.amazonaws.com/my-apt-bucket/ precise/master rails4-example-app amd64 0.0.0-20140414100914 [24.8 MB]
Fetched 24.9 MB in 2s (10.2 MB/s)
Selecting previously unselected package libreadline5.
(Reading database ... 72529 files and directories currently installed.)
Unpacking libreadline5 (from .../libreadline5_5.2-11_amd64.deb) ...
Selecting previously unselected package rails4-example-app.
Unpacking rails4-example-app (from .../rails4-example-app_0.0.0-20140414100914_amd64.deb) ...
Processing triggers for ureadahead ...
Setting up libreadline5 (5.2-11) ...
Setting up rails4-example-app (0.0.0-20140414100914) ...
Processing triggers for libc-bin ...
ldconfig deferred processing now taking place
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;pkgr installed the app files into &lt;code&gt;/opt/rails4-example-app&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls /opt/rails4-example-app/
app  bin  config  config.ru  db  Gemfile  Gemfile.lock  lib  log  public  Rakefile  README.rdoc  test  tmp  vendor
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And it indeed uses Ruby 2.0.0:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo rails4-example-app run ruby -v
ruby 2.0.0p451 (2014-02-24 revision 45167) [x86_64-linux]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To finish the tutorial, let’s get it up and running, by installing a postgres database, playing with the console, and starting a web daemon:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install -y postgresql-9.1
$ echo &quot;CREATE USER \&quot;user\&quot; PASSWORD &#39;pass&#39;;&quot; | sudo su - postgres -c psql &amp;amp;&amp;amp; \
  echo &quot;CREATE DATABASE rails4_example_app;&quot; | sudo su - postgres -c psql &amp;amp;&amp;amp; \
  echo &quot;GRANT ALL PRIVILEGES ON DATABASE \&quot;rails4_example_app\&quot; TO \&quot;user\&quot;;&quot; | sudo su - postgres -c psql

$ sudo rails4-example-app config:set DATABASE_URL=&quot;postgres://user:pass@127.0.0.1/rails4_example_app&quot;
$ sudo rails4-example-app config:set SECRET_KEY_BASE=$(sudo rails4-example-app run rake secret)

$ sudo rails4-example-app run console
Loading production environment (Rails 4.1.0)
irb(main):001:0&amp;gt; Rails::VERSION::STRING
=&amp;gt; &quot;4.1.0&quot;

$ sudo rails4-example-app scale web=1
Scaling up...
rails4-example-app-web-1 start/running, process 2030
rails4-example-app-web start/running
rails4-example-app start/running
--&amp;gt; done.

$ ps aux | grep ruby
106       2030  0.1 11.5 349560 69896 ?        Ssl  11:17   0:02 ruby bin/rails server -p 6000 -e production
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looks like everything is running fine, so &lt;code&gt;curl localhost:6000&lt;/code&gt; should give you the expected HTML output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl localhost:6000
Hello from Rails4 Example App!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Success!&lt;/p&gt;

&lt;p&gt;If you want to access your app on port 80, you could set up a proxy directive in nginx:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install -y nginx
$ sudo tee /etc/nginx/sites-available/default &amp;lt;&amp;lt;EOF
server {
  listen          80;
  server_name     example.com;
  location / {
    proxy_pass      http://localhost:6000;
  }
}
EOF
$ sudo service nginx restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, &lt;code&gt;curl localhost:80&lt;/code&gt; or &lt;code&gt;curl hostname-of-the-machine:80&lt;/code&gt; should give you the same result.&lt;/p&gt;

&lt;p&gt;You can also restart the Rails app using the provided init script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo service rails4-example-app restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And should you need to do anything to finish setting up your app, arbitrary commands can be run (in the context of your app’s Ruby version, gems, etc.) with the command line tool that was automatically generated by pkgr:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo rails4-example-app run rake db:migrate
$ sudo rails4-example-app run rake -T
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That’s it!&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;As you can see from this tutorial, packaging a Rails app, and hosting the resulting package on S3, just became a lot easier with tools such as &lt;a href=&quot;https://github.com/crohr/pkgr&quot;&gt;pkgr&lt;/a&gt; and &lt;a href=&quot;https://github.com/krobertson/deb-s3&quot;&gt;deb-s3&lt;/a&gt;. pkgr can also be used to package NodeJS apps, and in the near future will be able to generate RPM packages as well.&lt;/p&gt;

&lt;p&gt;If you like what you’ve seen, but would like a bit more automation, please have a look at &lt;a href=&quot;https://pkgr.io&quot;&gt;pkgr.io&lt;/a&gt;, the hosted service I created based on pkgr. You can enable a new project for packaging in one click, and it supports multiple targets.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to duplicate S3 buckets efficiently</title>
   <link href="http://crohr.me/journal/2013/how-to-duplicate-s3-buckets-efficiently.html"/>
   <updated>2013-09-30T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2013/how-to-duplicate-s3-buckets-efficiently</id>
   <content type="html">&lt;p&gt;Let’s say you want to duplicate a fairly large S3 bucket (for instance you want to make sure your staging bucket is in sync with your production bucket), but doing so with s3cmd takes forever, as well as going through the console UI (see &lt;a href=&quot;http://stackoverflow.com/questions/4663016/faster-s3-bucket-duplication&quot;&gt;this stackoverflow post&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Solution: use &lt;a href=&quot;https://github.com/cobbzilla/s3s3mirror&quot;&gt;s3s3mirror&lt;/a&gt;, which is a highly concurrent tool targeted at just this exact use case. Note that it won’t copy the object if it already exists and has the same ETag, and it also copies the object metadata and ACL lists. Perfect!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to build and publish base boxes for Docker?</title>
   <link href="http://crohr.me/journal/2013/docker-repository-create-base-boxes.html"/>
   <updated>2013-05-24T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2013/docker-repository-create-base-boxes</id>
   <content type="html">&lt;p&gt;If you don’t know about it yet, go check out &lt;a href=&quot;http://docker.io&quot;&gt;Docker&lt;/a&gt;, which makes manipulating LXC containers painless.&lt;/p&gt;

&lt;p&gt;Docker comes with a &lt;a href=&quot;https://index.docker.io&quot;&gt;registry&lt;/a&gt; where you can find images to use for your containers. You can also create and upload your own images in this repository, which is the subject of this article.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Create an account on the Docker index website: &lt;a href=&quot;https://index.docker.io&quot;&gt;https://index.docker.io&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On your box, login:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;    $&amp;gt; docker login
    Username (): crohr
    Password: 
    Email (): hi@example.com
    Login Succeeded
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For debian-based boxes, just use the &lt;a href=&quot;https://github.com/dotcloud/docker/blob/master/contrib&quot;&gt;mkimage-debian.sh script in contrib/&lt;/a&gt;:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;    $&amp;gt; ./mkimage-debian.sh crohr/ubuntu lucid http://archive.ubuntu.com/ubuntu
    ...
    + img=f7e10b978e8c
    + docker tag f7e10b978e8c crohr/ubuntu lucid
    + &#39;[&#39; lucid = wheezy &#39;]&#39;
    + docker run -i -t crohr/ubuntu:lucid echo success
    success
    + &#39;[&#39; lucid &#39;!=&#39; sid -a lucid &#39;!=&#39; unstable &#39;]&#39;
    ++ docker run crohr/ubuntu:lucid cat /etc/debian_version
    + ver=squeeze/sid
    + docker tag f7e10b978e8c crohr/ubuntu squeeze/sid
    2013/05/24 17:05:40 error: Illegal tag name: squeeze/sid
&lt;/code&gt;&lt;/pre&gt;

    &lt;p&gt;Note: The second tag is not created, but it does not matter (?).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Then, check that your image is indeed created:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;    $&amp;gt; docker images
    REPOSITORY          TAG                 ID                  CREATED
    crohr/ubuntu        lucid               f7e10b978e8c        34 minutes ago
    ubuntu              latest              8dbd9e392a96        6 weeks ago
    ubuntu              12.10               b750fe79269d        8 weeks ago
    ubuntu              12.04               8dbd9e392a96        6 weeks ago
    ubuntu              quantal             b750fe79269d        8 weeks ago
    ubuntu              precise             8dbd9e392a96        6 weeks ago
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now push it to the central repository:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;    $&amp;gt; docker push crohr/ubuntu
    The push refers to a repository [crohr/ubuntu] (len: 1)
    Processing checksums
    Sending image list
    Pushing repository crohr/ubuntu to registry-1.docker.io (1 tags)
    Pushing f7e10b978e8c15bde845374c490862befb181f0943a0ae2076d070573a435b16
    145858560/145858560 (100%)
    Pushing tags for rev [f7e10b978e8c15bde845374c490862befb181f0943a0ae2076d070573a435b16] on {registry-1.docker.io/users/crohr/ubuntu/lucid}
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s it! Now other people can pull your images using &lt;code&gt;docker pull crohr/ubuntu&lt;/code&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ebarnouflant #007</title>
   <link href="http://crohr.me/journal/2013/ebarnouflant-007.html"/>
   <updated>2013-03-17T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2013/ebarnouflant-007</id>
   <content type="html">&lt;p&gt;Better late than never!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://css-tricks.com/using-svg/&quot;&gt;Using SVG&lt;/a&gt; - Thorough guide to using (and customizing) SVG images in web pages.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/josephg/ShareJS&quot;&gt;josephg/ShareJS&lt;/a&gt; - Node.js library to allow for collaborative editing in any app.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/postrank-labs/postrank-uri&quot;&gt;postrank-labs/postrank-uri&lt;/a&gt; - Ruby library that deals with extracting, (un)escaping, normalization, and canonicalization of URIs. Was used at PostRank.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://gigaom.com/2013/03/15/by-the-numbers-how-google-compute-engine-stacks-up-to-amazon-ec2/&quot;&gt;By the numbers: How Google Compute Engine stacks up to Amazon EC2&lt;/a&gt; - Some interesting numbers, especially regarding the VM boot times, and the difference between Google’s private backbone and Amazon’s lack of it.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lite.ly/&quot;&gt;Photo Presets&lt;/a&gt; - Set of photo filters for Lightroom, Photoshop, Aperture, etc. “Add gorgeous, film-inspired tones to your photos in seconds.”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gov.uk/service-manual/web-ops&quot;&gt;Resources for web operations&lt;/a&gt; - Set of articles written as part of the UK Government Digital Strategy initiative. The full list of articles (on agile, design, teams, users, etc.) is available &lt;a href=&quot;https://www.gov.uk/service-manual/browse&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mitchellh/vagrant-aws&quot;&gt;mitchellh/vagrant-aws&lt;/a&gt; - Plugin that adds AWS support for Vagrant. Awesome!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://coderwall.com/p/xvzu-g&quot;&gt;Hypermedia APIs&lt;/a&gt; - A brief overview and pointers.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://dotcloud.github.com/docker/&quot;&gt;Docker&lt;/a&gt; - A new take on linux containers, to encapsulate a software component and all its dependencies in a format that is self-describing and portable. Soon to be open-sourced by dotCloud.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/pcalcado/from-a-monolithic-ruby-on-rails-app-to-the-jvm&quot;&gt;From a monolithic Ruby on Rails app to the JVM&lt;/a&gt; - Presentation on how (and why) SoundCloud is currently migrating away from Rails to JVM-based languages.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dotcloud/hipache&quot;&gt;dotcloud/hipache&lt;/a&gt; - Distributed HTTP and websocket proxy used at dotCloud to route the incoming requests to a backend (à la heroku).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mbostock/stack&quot;&gt;mbostock/stack&lt;/a&gt; - A presentation library that does keep the scroll based navigation controls. By the d3.js guy.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.randsinrepose.com/archives/2013/02/22/the_long_thought.html&quot;&gt;Rands In Repose: The Long Thought&lt;/a&gt; - “When I observe how I consume information, I’ve become increasingly aware of how little actual deep information I’m consuming.” - Why &lt;a href=&quot;http://discourse.org&quot;&gt;Discourse&lt;/a&gt; is being built to improve communication on Internet.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://joyent.com/blog/linux-performance-analysis-and-tools-brendan-gregg-s-talk-at-scale-11x&quot;&gt;Linux Performance Analysis and Tools&lt;/a&gt; - A quick tour of tools that can be used to see what’s going on on your system. Lots of them!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.startuplessonslearned.com/2009/06/why-continuous-deployment.html&quot;&gt;Lessons Learned: Why Continuous Deployment?&lt;/a&gt; - Good (old) article on the advantages of continuous deployment.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jayferd/rouge&quot;&gt;jayferd/rouge&lt;/a&gt; - Pure-ruby code highlighter compatible with Pygments.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/mweigel/how-to-not-fail-16647530&quot;&gt;How to (not) Fail&lt;/a&gt; - A lesson on the language of marketing. #1 on the not to do list: assume they’re interested.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/garrettdimon/bootstrapping-a-software-product&quot;&gt;Bootstrapping a Software Product&lt;/a&gt; - Slide deck on bootstrapping a software product as a solo entrepreneur. “If people take the time to criticize, it’s because they feel that the product is already pretty solid. If it’s way off, they don’t say anything at all.”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.larentis.eu/switch/&quot;&gt;Bootstrap switch&lt;/a&gt; - iOS-type switch button for Bootstrap.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rubyworks/yaml_command&quot;&gt;rubyworks/yaml_command&lt;/a&gt; - A command line tool for working with YAML files.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Ebarnouflant #006</title>
   <link href="http://crohr.me/journal/2013/ebarnouflant-006.html"/>
   <updated>2013-02-24T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2013/ebarnouflant-006</id>
   <content type="html">&lt;p&gt;Currently consuming EC2 instances for a new project. Hopefully I’ll have something ready in the next few weeks.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://engineering.twitter.com/2013/02/twitter-typeaheadjs-you-autocomplete-me.html&quot;&gt;Typeahead.js: You Autocomplete Me&lt;/a&gt; - Autocompletion jQuery plugin from Twitter.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.dropzonejs.com/&quot;&gt;Dropzone.js&lt;/a&gt; - Drag’n’drop javascript library for uploading files, with image previews. Designed with the latest browser APIs in mind. Falls back to normal upload form if browser is too old.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://spin.atomicobject.com/2013/02/15/ffi-foreign-function-interfaces/&quot;&gt;When &amp;amp; How to Use an FFI (Foreign Function Interface)&lt;/a&gt; - “An FFI wrapper is much easier to write and maintain than a C extension, more portable across platforms and language implementations, and easier for users to install.”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://benediktdeicke.com/2013/02/what-you-did-not-know-about-capistrano-yet/&quot;&gt;What you did not know about Capistrano, yet&lt;/a&gt; - Didn’t know about the &lt;code&gt;run_locally&lt;/code&gt; command.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://firstround.com/article/How-Stripe-built-one-of-Silicon-Valleys-best-engineering-teams&quot;&gt;How Stripe built one of Silicon Valley’s best engineering teams&lt;/a&gt; - “Referrals tend to be a really fantastic way to bring people in and should be the first place you go.”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://csswizardry.com/2013/01/front-end-performance-for-web-designers-and-front-end-developers/#section:retina-images&quot;&gt;Front-end performance for web designers and front-end developers&lt;/a&gt; - In which you learn about DNS and resource prefetching, image optimisation, and to never serve CSS from an asset domain.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://subtlepatterns.com/&quot;&gt;Subtle Patterns&lt;/a&gt; - Free textures for your website.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://bslatkin.github.com/cohorts/&quot;&gt;Cohort Visualizer&lt;/a&gt; - A tool for browsing cohort datasets, built in Javascript.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://vimeo.com/27243627&quot;&gt;3 Baton Rouge Table 2.5 metres&lt;/a&gt; - Coming soon to your nearest Ikea (or not).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://moqups.com/&quot;&gt;Moqups&lt;/a&gt; - Free (for now) concurrent to Balsamiq mockup.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://color.hailpixel.com/&quot;&gt;color.hailpixel.com&lt;/a&gt; - Very cool tool to choose a colour palette in a wide space.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://freethroww.com/&quot;&gt;freethroww&lt;/a&gt; - Page listing the top freebies on dribble.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Ebarnouflant #005</title>
   <link href="http://crohr.me/journal/2013/ebarnouflant-005.html"/>
   <updated>2013-02-17T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2013/ebarnouflant-005</id>
   <content type="html">&lt;p&gt;Training sessions are now finished, quieter weeks ahead!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://pragprog.com/magazines/2013-02/estimation-is-evil&quot;&gt;Estimation is Evil&lt;/a&gt; - Stop estimating. Start shipping.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tbray.org/ongoing/When/201x/2013/02/10/XML-at-15&quot;&gt;XML’s 15th Birthday&lt;/a&gt; - “These days, if you want to interchange tuples or tables of tuples or numbers and strings, you have JSON. If you want to do nontrivial publishing automation, use XML. If you want to interchange smart bitmaps of page images, there’s PDF. I personally think we’re probably done with inventing low-level textual interchange formats.” - Tim Bray&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tenderlovemaking.com/2013/02/06/yaml-f7u12.html&quot;&gt;YAML f7u12&lt;/a&gt; - Aaron Patterson explains the need for a &lt;code&gt;YAML.safe_load&lt;/code&gt;, following newly discovered Rails vulnerabilities.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://robots.thoughtbot.com/post/10125070413/unobtrusive-ruby&quot;&gt;Unobtrusive Ruby&lt;/a&gt; - “Unobtrusive Ruby is any Ruby code that stays out of your way”. Follow-up article on &lt;a href=&quot;https://practicingruby.com/articles/shared/yfildjshgzew&quot;&gt;PracticingRuby&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://codahale.com/a-lesson-in-timing-attacks/&quot;&gt;A Lesson In Timing Attacks&lt;/a&gt; - Old but still relevant article on timing attacks, which look scary: “They work against a programmer’s best instincts—don’t do extra work—to give an attacker with access to a Statistics 101 textbook a good solid grip on your application’s guts.”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://travisjeffery.com/b/2012/02/search-a-git-repo-like-a-ninja/&quot;&gt;Search a Git Repo Like a Ninja&lt;/a&gt; - Much better than manually grep’ing or ack’ing.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://practicingruby.com/articles/shared/nkhaprcgwrpv&quot;&gt;A gentle introduction to actor-based concurrency&lt;/a&gt; - The Dining Philosophers Problem, seen from a mutex-based perspective, and with Actors (Celluloid).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mahout.apache.org/&quot;&gt;Apache Mahout: Scalable machine learning and data mining&lt;/a&gt; - I really need to test this with Amazon Elastic MapReduce.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/raganwald/homoiconic/blob/master/2013/02/prototypes.md&quot;&gt;Classes vs. Prototypes in JavaScript&lt;/a&gt; - Clear and concise explanation of the difference between class-based inheritance and prototype-based inheritance.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.modern.ie/virtualization-tools&quot;&gt;modern.IE&lt;/a&gt; - Nice effort by Microsoft to provide VMs with various versions of IEs for your OS/Hypervisor. You can also get 3 months of hosted virtualization for free.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/CSS/Understanding_z-index/The_stacking_context&quot;&gt;The stacking context&lt;/a&gt; - Useful to understand CSS z-index property.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.blokkfont.com/&quot;&gt;BLOKK&lt;/a&gt; - A font for quick mock-ups and wireframing for clients who do not understand latin.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://robots.thoughtbot.com/post/42286882447/handle-incoming-email-with-griddler&quot;&gt;Handle incoming email with Griddler&lt;/a&gt; - A Rails engine that provides an endpoint for the SendGrid Parse API.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://rivetsjs.com/&quot;&gt;Rivets.js&lt;/a&gt; - A lightweight declarative data binding facility that plays well with existing javascript frameworks.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mezis/mrd&quot;&gt;mezis/mrd&lt;/a&gt; - Run MySQL off a RAM disk - MacOS only&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Ebarnouflant #004</title>
   <link href="http://crohr.me/journal/2013/ebarnouflant-004.html"/>
   <updated>2013-02-03T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2013/ebarnouflant-004</id>
   <content type="html">&lt;p&gt;February already. 2013 looks like a rough year for Rails &amp;amp; Ruby.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kalzumeus.com/2013/01/31/what-the-rails-security-issue-means-for-your-startup/&quot;&gt;What The Rails Security Issue Means For Your Startup&lt;/a&gt; - “Blood in the water attracts sharks”.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rubygems/rubygems-aws&quot;&gt;rubygems/rubygems-aws&lt;/a&gt; - Following the security breach on rubygems.org, a team went on to rebuild the full rubygems infrastructure in a fully automated way to deploy it on new machines (before it was all manually done). This is a very good example of how to use a mix of Capistrano, Vagrant, AWS, Chef (solo) and librarian-chef to manage, test and deploy your infrastructure. Replace Chef and librarian-chef with Puppet and librarian-puppet at your convenience ;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rcrowley/freight/&quot;&gt;rcrowley/freight&lt;/a&gt; - A tool to release Debian archives in an easy way. Part of the &lt;a href=&quot;http://rcrowley.org/articles/packaging.html&quot;&gt;“Debian packaging for busy people”&lt;/a&gt; toolset.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.opsschool.org/en/latest/&quot;&gt;Ops School Curriculum&lt;/a&gt; - An attempt at documenting what you need to know to become an Ops. &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.stackoverflow.com/2013/02/why-we-still-believe-in-working-remotely/?cb=1&quot;&gt;Why We (Still) Believe in Working Remotely&lt;/a&gt; - By the folks at StackExchange (StackOverflow &amp;amp; cie). Good press for Google Hangouts, which is indeed really great for video group chat and collaboration.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/2669690/why-does-google-append-while1-in-front-of-their-json-responses&quot;&gt;Why does Google append while(1); in front of their JSON responses?&lt;/a&gt; - Clever hack for cross-site request forgery prevention.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Ebarnouflant #003</title>
   <link href="http://crohr.me/journal/2013/ebarnouflant-003.html"/>
   <updated>2013-01-27T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2013/ebarnouflant-003</id>
   <content type="html">&lt;p&gt;Started a series of trainings. Enjoyable and exhausting at the same time.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.autosketchup.com/&quot;&gt;Automatic SketchUp: Creating 3-D Models in Ruby&lt;/a&gt; - Great (free) book for learning how to use the &lt;a href=&quot;http://www.sketchup.com/intl/en/developer/&quot;&gt;SketchUp Ruby API&lt;/a&gt; to build 3D models programmatically.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.somethingsimilar.com/2013/01/14/notes-on-distributed-systems-for-young-bloods/&quot;&gt;Notes on Distributed Systems for Young Bloods&lt;/a&gt; - Good list. Also, interesting note about the social aspects of distributed systems.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://timeline.verite.co/&quot;&gt;Timeline JS&lt;/a&gt; - Javascript library to display timelines.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/twitter/secureheaders&quot;&gt;twitter/secureheaders&lt;/a&gt; - Security related HTTP headers all in one gem.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/raganwald/homoiconic/blob/master/2013/01/this.md#more-than-you-ever-wanted-to-know-about-this-in-javascript-part-i&quot;&gt;More than you ever wanted to know about “this” in JavaScript&lt;/a&gt; - A good post by &lt;a href=&quot;http://braythwayt.com/&quot;&gt;Reg Braithwaite&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rogerwang/node-webkit&quot;&gt;rogerwang/node-webkit&lt;/a&gt; - Write native apps in HTML and Javascript and call Node.js modules directly. App runtime based on Chromium and node.js. Then you can package your apps for all platforms.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jonathantneal.com/blog/understand-the-favicon/&quot;&gt;Understand the Favicon&lt;/a&gt; - Not so simple.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jamesmaskell.co.uk/2013/online-payments-in-2013/&quot;&gt;Taking payments online (in Europe) in 2013&lt;/a&gt; - Still harder in Europe than in the US.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.nngroup.com/articles/auto-forwarding/&quot;&gt;Auto-Forwarding Carousels and Accordions Annoy Users and Reduce Visibility&lt;/a&gt; - “The user’s target was at the top of the page in 98-point font. But she failed to find it because the panel auto-rotated instead of staying still”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/brandonhilkert/sucker_punch&quot;&gt;brandonhilkert/sucker_punchb&lt;/a&gt; - A single-process Ruby asynchronous processing library built on Celluloid.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Ebarnouflant #002</title>
   <link href="http://crohr.me/journal/2013/ebarnouflant-002.html"/>
   <updated>2013-01-20T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2013/ebarnouflant-002</id>
   <content type="html">&lt;p&gt;Back from the &lt;a href=&quot;http://takeoffconf.com/&quot;&gt;TakeOff&lt;/a&gt; conference in Lille,
France. Great people, some really good talks, and a lot to think about.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://squash.io/&quot;&gt;Squash: The open-source bug-smashing tool&lt;/a&gt; - Exception reporting and bug analysis tool from Square. Requires that your project be stored in a git repo.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/sstephenson/rbenv/wiki/Unix-shell-initialization&quot;&gt;Unix shell initialization&lt;/a&gt; - Ever wondered which initialization files get sourced by your shell depending on how it is run? Good reference page from the rbenv wiki.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.bleonard.com/blog/2013/01/18/singletons/&quot;&gt;Singletons, Threads, and Flexibility&lt;/a&gt; - A take on how to make thread-safe Ruby libraries that use a module or class level singleton for configuration/execution.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2012/12/22/talks-to-help-you-become-a-better-front-end-engineer-in-2013/&quot;&gt;Talks To Help You Become A Better Front-End Engineer In 2013&lt;/a&gt; - That’s a lot of them, but pick the topics that most interest you.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tomdale.net/2012/01/amd-is-not-the-answer/&quot;&gt;AMD is Not the Answer&lt;/a&gt; - Wanting to look at RequireJS to manage your javascript dependencies? Here is a rant by Tom Dale (creator of Ember.js) explaining why this is not a good solution in modern apps.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.millermedeiros.com/amd-is-better-for-the-web-than-commonjs-modules/&quot;&gt;AMD is better for the web than CommonJS modules&lt;/a&gt; - Counterpoint to the “AMD is Not the Answer” article.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.quora.com/Ember-js/Which-one-of-angular-js-and-ember-js-is-the-better-choice&quot;&gt;Which one of angular.js and ember.js is the better choice?&lt;/a&gt; - Good question indeed.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://requirejs.org/&quot;&gt;RequireJS&lt;/a&gt; - If you want to know more about RequireJS, a JavaScript file and module loader.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://headjs.com/&quot;&gt;HeadJS, the only script in your HEAD&lt;/a&gt; - That’s a lot of Javascript frameworks and loaders for a single edition, but yet another one.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rwldrn/johnny-five&quot;&gt;rwldrn/johnny-five&lt;/a&gt; - JavaScript Arduino programming framework. We had a demonstration at the TakeOffConf, and it looks very easy to use.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/identity-toolkit/&quot;&gt;Google Identity Toolkit&lt;/a&gt; - Free toolkit for websites who currently allow users to login with their email address and password, and would like to replace that password with federated login. Currently supports Google mail, Hotmail, Yahoo! mail, AOL mail, and Google Apps mail.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://courseware.codeschool.com/uploads/12_steps_takeoffconf.pdf&quot;&gt;12 steps to win at software development&lt;/a&gt; - Nice talk by Greg Pollack, given at TakeOffConf. Direct link to the PDF.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://pekelman.com/presentations/apidays/#/1/28&quot;&gt;Lipstick on a pig&lt;/a&gt; - Don’t try to piggyback a REST API on your legacy SOAP web services just by using JSON and HTTP methods. This requires design, or you’ll likely end up with an API that has the same beauty as what could be achieved by putting lipstick on a pig.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://37signals.com/svn/posts/3372-put-chubby-models-on-a-diet-with-concerns?47#all_comments&quot;&gt;Put chubby models on a diet with concerns&lt;/a&gt; - Nice quote by DHH in the comments of this article: “Rails itself is designed exclusively with the ‘good, responsible, trusted developers’ in mind. If it happens to work for “bad, irresponsible, untrustworthy developers” as well, that’s merely an inconsequential side effect. There are lots of development environments that focus explicitly on preventing that later group from doing much damage. Ruby on Rails was never intended to be among those.”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.randsinrepose.com/archives/2013/01/01/the_process_myth.html&quot;&gt;Rands In Repose: The Process Myth&lt;/a&gt; - “On the list of ways to generate a guaranteed negative knee-jerk reaction from an engineer, I offer a single word: process.”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amandacox.tumblr.com/&quot;&gt;Amanda Cox and Countrymen&lt;/a&gt; - Visualizations blog by one of the best in the field.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jonrohan/ZeroClipboard&quot;&gt;jonrohan/ZeroClipboard&lt;/a&gt; - Javascript library to copy text to the clipboard. By github.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.masterzen.fr/2013/01/13/the-10-commandments-of-logging/&quot;&gt;The 10 commandments of logging&lt;/a&gt; - TL;DR : write meaningful and parseable logs, at the right level, using a proper library.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://dtrace.org/blogs/brendan/2013/01/11/virtualization-performance-zones-kvm-xen/&quot;&gt;Virtualization Performance: Zones, KVM, Xen&lt;/a&gt; - Summary of the performance of various virtualization technologies (Zones, KVM, Xen) by Joyent.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://coderwall.com/p/ivvntg&quot;&gt;Cut down some seconds of your spec suite by removing database_cleaner&lt;/a&gt; - Code snippet to only truncate your database tables on examples that really need it.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/climagic/status/289737218795376641&quot;&gt;find ~/ -size +100M -exec du -h {} ;&lt;/a&gt; - Find all files larger than 100MB and display their human readable size.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vertiginous/pik&quot;&gt;vertiginous/pik&lt;/a&gt; - Ruby version manager for Windows.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Ebarnouflant #001</title>
   <link href="http://crohr.me/journal/2013/ebarnouflant-001.html"/>
   <updated>2013-01-11T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2013/ebarnouflant-001</id>
   <content type="html">&lt;p&gt;This year I’m going to try something new, i.e. publish every week a list
of links, mainly about Web development, Freelancing, DevOps, etc. The
goal is not necessarily to post the most awesome or recent links, but
things that I’ve found to be useful or interesting in my daily work.&lt;/p&gt;

&lt;p&gt;Inspiration for this mainly comes from the &lt;em&gt;Double Shot&lt;/em&gt; series on &lt;a href=&quot;http://afreshcup.com/&quot;&gt;Mike
Gunderloy’s website&lt;/a&gt;, as you always end up
finding a few links to interesting
discussions/posts/products/libraries/people that you didn’t know about.
It’s also a more paced alternative to Twitter for finding links.&lt;/p&gt;

&lt;p&gt;This series will be called &lt;em&gt;Ebarnouflant&lt;/em&gt;, which is a French word to
express a mixture of “wow/awesome/cool/crazy/unbelievable” feelings
about something. I hope you’ll (re)discover at least something every
week.&lt;/p&gt;

&lt;p&gt;Let’s start with this week’s links:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://db.risk.io/&quot;&gt;RiskDB Vulnerability Explorer&lt;/a&gt; - With the recent Rails security issues, you may want to keep an eye on the latest vulnerabilities discovered in the software world.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://casperjs.org/&quot;&gt;CasperJS&lt;/a&gt; - Navigation scripting &amp;amp; testing utility for PhantomJS, written in Javascript. If you’re tired of Capybara &amp;amp; Selenium.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.geckoboard.com/&quot;&gt;Geckoboard&lt;/a&gt; - Paid SaaS product to get a (good-looking) custom dashboard for your key metrics. Integrates with various services and has an API to build custom widgets.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://devopsweekly.com/&quot;&gt;Weekly Devops Email Newsletter&lt;/a&gt; - Weekly newsletter with links to interesting devops-related articles.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.morethanseven.net/2012/12/30/my-personal-package-repository/&quot;&gt;My personal package repository&lt;/a&gt; - Scripts for building and maintaining a debian package repository using Vagrant. Examples available on Github.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.igvita.com/2012/12/18/deploying-new-image-formats-on-the-web/&quot;&gt;Deploying New Image Formats on the Web&lt;/a&gt; - Practical use of content-negotiation techniques to deliver optimized images according to the browser’s capabilities.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://maxime.sh/2013/01/comment-recuperer-un-compte-twitter/&quot;&gt;Comment récupérer un compte Twitter&lt;/a&gt; - French article on how to get back a twitter account that impersonates your Company/Product.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.image-mapper.com/&quot;&gt;Image Mapper&lt;/a&gt; - Haven’t done that kind of thing in years, but this looks like a nice online tool to help creating HTML image maps.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/square/cane&quot;&gt;square/cane&lt;/a&gt; - Code quality threshold checking as part of your build.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/apps-script/?hl=fr&quot;&gt;Google Apps Script&lt;/a&gt; - JavaScript-based language that provides easy ways to automate tasks across Google products and third party services.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://asquera.de/opensource/2012/11/25/elasticsearch-pre-flight-checklist/&quot;&gt;ElasticSearch pre-flight checklist&lt;/a&gt; - List of things that should never be skipped when bringing an ElasticSearch cluster to production.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://upstart.ubuntu.com/cookbook/&quot;&gt;Upstart Intro, Cookbook and Best Practices&lt;/a&gt; - For those interested in writing upstart scripts for debian-based and fedora-based platforms. This doc is specifically targeted at Ubuntu.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Le refactoring en confiance</title>
   <link href="http://crohr.me/journal/2013/le-refactoring-en-confiance.html"/>
   <updated>2013-01-10T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2013/le-refactoring-en-confiance</id>
   <content type="html">&lt;p&gt;Le dernier DevCamp à la &lt;a href=&quot;http://www.lacantine-rennes.net/&quot;&gt;Cantine Numérique
Rennaise&lt;/a&gt; était sur le thème du
refactoring et des tests. A cette occasion, j’ai donné une présentation
sur comment s’assurer d’un minimum de confiance, via l’écriture de tests
au niveau IHM, lorsque l’on attaque le refactoring d’une ancienne
application. L’exemple donné est sur une application Rails, mais les
mêmes outils pourraient être appliqués pour n’importe quelle application
web.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/presentations/refactoring-blackbox-testing/&quot;&gt;Voir la présentation&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Who said Puppet was hard?</title>
   <link href="http://crohr.me/journal/2012/who-said-puppet-was-hard.html"/>
   <updated>2012-11-15T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/who-said-puppet-was-hard</id>
   <content type="html">&lt;p&gt;Yesterday I was at the second edition of the
&lt;a href=&quot;http://www.lacantine-rennes.net/2012/11/devcamp2-si-tu-codes-tu-viens/&quot;&gt;Devcamp&lt;/a&gt;
in Rennes, where developers from various horizons and communities gather
to share ideas and tools related to a specific theme.&lt;/p&gt;

&lt;p&gt;This time the theme was about deployment, and I took the lightning talk
slot to present a short demo with the goal of demystifying
&lt;a href=&quot;http://puppetlabs.com/&quot;&gt;Puppet&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Indeed, Puppet (or Chef for that matter) is often seen as a tool only
used and usable in large organizations. People often think it has to be
a client-server architecture, with lots of dependencies and
configuration to setup, but the truth is that it comes with a solo mode
that is really painless to use, even for simple deployments on a single
or few machines.&lt;/p&gt;

&lt;p&gt;If you’re interested in the end result, you can just go look at the
&lt;a href=&quot;https://github.com/crohr/who-said-puppet-was-hard&quot;&gt;demo&lt;/a&gt; on github.&lt;/p&gt;

&lt;h2 id=&quot;puppet&quot;&gt;Puppet&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Server provisioning tool.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can be a pain to install in a client-server setup.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For simple installations, use the solo mode!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The only thing to install on the remote server is the puppet gem (go
with v2.6.x for now):&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  apt-get install ruby1.8 rubygems1.8 libopenssl-ruby1.8 -y &amp;amp;&amp;amp; \
  gem install puppet --version 2.6.11 --no-ri --no-rdoc
&lt;/code&gt;&lt;/pre&gt;

    &lt;p&gt;See the last section for a &lt;a href=&quot;http://capify.org/&quot;&gt;Capistrano&lt;/a&gt; task to
automate the whole thing.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;puppet-manifest&quot;&gt;Puppet manifest&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Declares everything that needs to be installed and configured in order
for a piece of software to be functional.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can be as simple as a single file, with directives such as:&lt;/p&gt;

    &lt;p&gt;&lt;!-- code[ruby] --&gt;&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  # site.pp
  package {&quot;mysql-server&quot;:
    ensure =&amp;gt; installed
  }

  service {&quot;mysqld&quot;:
    name =&amp;gt; &quot;mysql&quot;,
    ensure =&amp;gt; running,
    require =&amp;gt; Package[&quot;mysql-server&quot;]
  }

  exec { &quot;allow-mysql&quot;:
    command =&amp;gt; &quot;/bin/echo &#39;mysqld: ALL: allow&#39; &amp;gt;&amp;gt; /etc/hosts.allow&quot;,
    onlyif  =&amp;gt; &quot;/bin/grep -qv ^mysqld /etc/hosts.allow&quot;,
    require =&amp;gt; Package[&quot;mysql-server&quot;]
  }

  file { &quot;/etc/mysql/conf.d/custom.cnf&quot;:
    mode =&amp;gt; 644, owner =&amp;gt; root, group =&amp;gt; root,
    content =&amp;gt; &quot;[mysqld]\nbind-address = 127.0.0.1\n&quot;,
    notify =&amp;gt; Service[&quot;mysqld&quot;],
    require =&amp;gt; Package[&quot;mysql-server&quot;];
  }
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Provision the remote server with the following command (add
&lt;code&gt;/var/lib/gems/1.8/bin/&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; if needed):&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  puppet apply site.pp
&lt;/code&gt;&lt;/pre&gt;

    &lt;p&gt;You should see the following output:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  notice: /Stage[main]//Package[mysql-server]/ensure: ensure changed &#39;purged&#39; to &#39;present&#39;
  notice: /Stage[main]//File[/etc/mysql/conf.d/custom.cnf]/ensure: defined content as &#39;{md5}6cf7741c1e6fc9baafca18e65f68d9ca&#39;
  notice: /Stage[main]//Service[mysqld]: Triggered &#39;refresh&#39; from 1 events
  notice: /Stage[main]//Exec[allow-mysql]/returns: executed successfully
  notice: Finished catalog run in 51.92 seconds
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;puppet-modules&quot;&gt;Puppet modules&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;When you have lots of things to install, you can create specific
modules for each software component.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Don’t reinvent the wheel, lots of modules have already been created,
that are parametrized and re-usable on various distributions. See the
&lt;a href=&quot;http://forge.puppetlabs.com&quot;&gt;Puppet forge&lt;/a&gt;, or search on Github.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Use &lt;a href=&quot;https://github.com/rodjek/librarian-puppet&quot;&gt;&lt;code&gt;librarian-puppet&lt;/code&gt;&lt;/a&gt;
to manage your modules dependencies.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;manage-your-puppet-module-dependencies-with-librarian-puppet&quot;&gt;Manage your Puppet module dependencies with librarian-puppet&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Like &lt;a href=&quot;http://gembundler.com/&quot;&gt;&lt;code&gt;bundler&lt;/code&gt;&lt;/a&gt;, but for Puppet modules.&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  gem install librarian-puppet
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Example &lt;code&gt;Puppetfile&lt;/code&gt;:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  forge &quot;http://forge.puppetlabs.com&quot;

  mod &#39;puppetlabs/stdlib&#39;
  mod &quot;puppetlabs/apt&quot;
  mod &#39;puppetlabs/ntp&#39;
  mod &#39;puppetlabs/apache&#39;
  mod &#39;puppetlabs/firewall&#39;
  mod &#39;huit/gitolite&#39;
  mod &#39;alup/rbenv&#39;
  mod &#39;saz/sudo&#39;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Then let librarian-puppet fetch the dependencies with:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  librarian-puppet install
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This will create a &lt;code&gt;modules/&lt;/code&gt; directory locally, containing all the
modules you declared in your &lt;code&gt;Puppetfile&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can also reference specific Git repositories, branches, etc. See
the &lt;code&gt;librarian-puppet&lt;/code&gt; README for this.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Include the modules you need in a site manifest &lt;code&gt;site.pp&lt;/code&gt;. For instance:&lt;/p&gt;

    &lt;!-- code[ruby] --&gt;

    &lt;pre&gt;&lt;code&gt;  include ntp

  package{&quot;some-package&quot;:
    ensure =&amp;gt; installed
  }

  user {&quot;some-user&quot;:
    ensure =&amp;gt; present,
    managehome =&amp;gt; true,
    shell =&amp;gt; &quot;/bin/bash&quot;
  }

  rbenv::install { &quot;some-user rbenv&quot;:
    user =&amp;gt; &quot;some-user&quot;,
    require =&amp;gt; User[&quot;some-user&quot;]
  }

  rbenv::compile { &quot;1.9.3-p286&quot;:
    user =&amp;gt; &quot;some-user&quot;,
    global =&amp;gt; true,
    require =&amp;gt; Rbenv::Install[&quot;some-user rbenv&quot;]
  }

  class {&#39;apache&#39;:  }

  apache::vhost { &#39;server.com&#39;:
      priority      =&amp;gt; &#39;10&#39;,
      port          =&amp;gt; &#39;80&#39;,
      docroot       =&amp;gt; &#39;/var/www/server.com&#39;,
      serveradmin   =&amp;gt; &#39;support@server.com&#39;,
      ensure        =&amp;gt; present
  }
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Make sure you have installed &lt;code&gt;puppet&lt;/code&gt; on the target server.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Upload your manifests and modules to the target server.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Provision your server using:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  puppet apply /path/to/site.pp --modulepath /path/to/modules/
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;automate-with-capistrano&quot;&gt;Automate with Capistrano&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Put this in your &lt;code&gt;config/deploy.rb&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;!-- code[ruby] --&gt;&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  set :puppet_dir, &quot;/tmp/puppet&quot;
  set :puppet_cmd, &quot;/var/lib/gems/1.8/bin/puppet&quot;

  desc &quot;Install and configure the puppet recipes on a remote machine.&quot;
  task :provision do
    system &quot;rm -f modules.tar.gz &amp;amp;&amp;amp; tar czf modules.tar.gz modules&quot;
    run &quot;rm -rf #{puppet_dir} &amp;amp;&amp;amp; mkdir -p #{puppet_dir}&quot;

    upload &quot;modules.tar.gz&quot;, puppet_dir, :force =&amp;gt; true, :via =&amp;gt; :scp
    upload &quot;./config/site.pp&quot;, puppet_dir, :force =&amp;gt; true, :via =&amp;gt; :scp

    run &quot;cd #{puppet_dir} &amp;amp;&amp;amp; tar xzf modules.tar.gz &amp;amp;&amp;amp; \
      #{sudo} apt-get update &amp;amp;&amp;amp; #{sudo} apt-get install ruby1.8 rubygems1.8 libopenssl-ruby1.8 -y &amp;amp;&amp;amp; \
      ( [ -f #{puppet_cmd} ] || #{sudo} gem install puppet --version 2.6.11 --no-ri --no-rdoc ) &amp;amp;&amp;amp; \
      #{sudo} #{puppet_cmd} #{puppet_dir}/site.pp --modulepath #{puppet_dir}/modules/&quot;
  end
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And then:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  HOSTS=my-server.com cap provision
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[optional] Finally, once your server is provisioned with everything
you need for your main app (let’s say a Rails app), you can deploy it
using the standard Capistrano process:&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  HOSTS=my-server.com cap deploy:setup deploy
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;demo&quot;&gt;Demo&lt;/h2&gt;

&lt;p&gt;The demo started with a fresh Ubuntu 10.04LTS EC2 instance (with a
single click from the &lt;a href=&quot;http://uec-images.ubuntu.com/releases/10.04/release/&quot;&gt;Ubuntu Cloud image repository&lt;/a&gt;
which is great stuff by the way), and then the single Capistrano command
deployed everything on that bare server in less than 5’. For a last
minute presentation, I think it went great.&lt;/p&gt;

&lt;p&gt;Have a look at the &lt;a href=&quot;https://github.com/crohr/who-said-puppet-was-hard&quot;&gt;demo&lt;/a&gt; on github.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;If you want to get one or more servers deployed in no time, find the
Puppet modules you need on the forge or create your own simple
manifests, and use Puppet in solo mode to apply the recipes on any
number of server with a simple Capistrano task.&lt;/p&gt;

&lt;p&gt;Also, it’s likely that you can get to the same result with Chef (see the
original &lt;a href=&quot;https://github.com/applicationsonline/librarian&quot;&gt;Librarian&lt;/a&gt; gem, which comes with librarian-chef),
so there is really no excuse to keep using your shell scripts or
half-backed libraries to provision servers.&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rodjek/librarian-puppet&quot;&gt;https://github.com/rodjek/librarian-puppet&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Github repository where you can find &lt;code&gt;librarian-puppet&lt;/code&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://forge.puppetlabs.com&quot;&gt;http://forge.puppetlabs.com&lt;/a&gt; - Puppet forge, where you can find
modules for almost everything.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.puppetlabs.com/references/latest/type.html&quot;&gt;http://docs.puppetlabs.com/references/latest/type.html&lt;/a&gt; - Puppet type
reference.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Software blueprint</title>
   <link href="http://crohr.me/journal/2012/software-blueprint.html"/>
   <updated>2012-09-26T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/software-blueprint</id>
   <content type="html">&lt;p&gt;From that &lt;a href=&quot;http://typicalprogrammer.com/?p=15&quot;&gt;Typicalprogrammer
article&lt;/a&gt;, in which Greg Jorgensen
comments on Joel Spolsky’s article on five ways to make a software
project fail:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The detailed plan for a non-trivial program is as complicated as the
program itself. If every problem is solved enough to estimate the
code in hours, if every logical module is described, and if every
contingency is anticipated and planned for, the code will almost write
itself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Rings very true with a presentation given at BaRuCo this year by &lt;a href=&quot;https://twitter.com/nusco&quot;&gt;Paolo
Perrotta&lt;/a&gt;, i.e. the code IS the
&lt;strong&gt;blueprint&lt;/strong&gt;, not the specification, as detailed as it could be. And
the act of &lt;strong&gt;building&lt;/strong&gt; software is the compilation step (which comes
for free in our world), not the process of writing the code. &lt;/p&gt;

&lt;p&gt;I’ll update this article once the recording of the talk is available.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails3 apps to package</title>
   <link href="http://crohr.me/journal/2012/rails3-apps-to-package.html"/>
   <updated>2012-07-06T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/rails3-apps-to-package</id>
   <content type="html">&lt;p&gt;I’m still thinking about &lt;a href=&quot;http://crohr.me/pkgr&quot;&gt;pkgr&lt;/a&gt;, and I came up with a few Rails
apps that would be nice to package as .deb:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://redmine.org&quot;&gt;Redmine&lt;/a&gt; - the famous project management tool. A
debian package already exists, but with a way too old version. I’ve
been able to build a package with pkgr. Just need to test it further
and upload it somewhere.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;gitlabhq.com&quot;&gt;Gitlab HQ&lt;/a&gt; - a Github clone. Useful for setting up a
private Github clone with pull requests, comments, etc.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://getbarkeep.org/&quot;&gt;barkeep&lt;/a&gt; - a new code review tool.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All those projects use a mix of dependencies (MySQL, Postgres, Redis,
Git, etc.), have different configuration strategies, and some of them
have a &lt;a href=&quot;https://devcenter.heroku.com/articles/procfile&quot;&gt;Procfile&lt;/a&gt; where they declare the processes to run.
Therefore it’ll be a good test to see if I’m able to package them
easily.&lt;/p&gt;

&lt;p&gt;If it works, then it’ll be time to set up a continuous packaging server
hooked to Github ;)&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Rulu 2012</title>
   <link href="http://crohr.me/journal/2012/rulu2012.html"/>
   <updated>2012-06-25T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/rulu2012</id>
   <content type="html">&lt;p&gt;I just came back from &lt;a href=&quot;http://rulu.eu&quot;&gt;Rulu&lt;/a&gt; 2012, the second edition of the best
Ruby conference in France. Good food, perfect organization, nice
location, very nice weather, and some good talks as well. Most
importantly, almost twice as many people as last year, which means I met
a lot of new people :)&lt;/p&gt;

&lt;p&gt;A quick poll showed that more than 1/3 of the Rulu attendees are now
working remotely, which is… unexpected, at least in France. Among
those, it would have been interesting to know the proportion of
freelancers and employees.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/rulu2012-lightning-talk.jpeg&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the last day, I decided to register to do a lightning talk on
&lt;a href=&quot;http://crohr.me/pkgr&quot;&gt;pkgr&lt;/a&gt;. This was quite a challenge, as it was my first time
speaking in front of so many people, talking about a not-so-easy subject
(deployment and debian packaging), and I had to prepare a presentation
on the spot during one of the morning breaks.&lt;/p&gt;

&lt;p&gt;Obviously that led to a few issues: I did the mistake of putting way too
many things on my &lt;a href=&quot;https://speakerdeck.com/u/crohr/p/pkgr-apt-get-install-my-rails-app&quot;&gt;slides&lt;/a&gt; (bullet points? with more than 3
words? whaaaat?), which diluted the point I was trying to make (which
is: “deploying a Rails app – especially off-the-shelf Rails apps such
as Redmine – is not as simple as it could be”); I couldn’t show my last
slide (5 mins is very quick); and I probably spoke a bit too fast.&lt;/p&gt;

&lt;p&gt;I’m sure I’ll find a lot more issues when/if the recording of the talk
is made available. That being said, that makes for good practice, and it
led to a few interesting discussions afterwards. But next time, I’ll
make sure to schedule and prepare my presentation before-hand.&lt;/p&gt;

&lt;p&gt;See you all next year, or at &lt;a href=&quot;http://baruco.org/&quot;&gt;BaRuCo&lt;/a&gt; in September!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: &lt;a href=&quot;http://www.youtube.com/watch?v=KbljOCtolAc&quot;&gt;here is the recorded video&lt;/a&gt; of the talk.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>The Valve handbook for new employees</title>
   <link href="http://crohr.me/journal/2012/the-valve-handbook-for-new-employees.html"/>
   <updated>2012-05-30T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/the-valve-handbook-for-new-employees</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;A fearless adventure in knowing what to do when no one’s there
telling you what to do.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Interesting
&lt;a href=&quot;http://newcdn.flamehaus.com/Valve_Handbook_LowRes.pdf&quot;&gt;read&lt;/a&gt; (PDF) on
how Valve operates internally. Flat structure, self-organization,
importance of the hiring process.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>People are your competitive advantage</title>
   <link href="http://crohr.me/journal/2012/people-are-your-competitive-advantage.html"/>
   <updated>2012-05-30T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/people-are-your-competitive-advantage</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://rc3.org/2012/05/04/people-are-your-competitive-advantage/&quot;&gt;Rafe Colburn&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How does a company gain a competitive advantage these days? My
argument would be that the most effective approach is to recruit
and retain creative people, and to free them to do their best work.
[…] At Etsy, we find that the people who are the easiest to
recruit are the ones who read the company’s engineering blog, Code
as Craft, tried to apply things they learned at their own company, and
eventually gave up and just looked for a job at Etsy instead.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Virtualize your development environments with Vagrant &amp; Puppet</title>
   <link href="http://crohr.me/journal/2012/virtualize-your-development-environments-with-vagrant-and-puppet.html"/>
   <updated>2012-05-15T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/virtualize-your-development-environments-with-vagrant-and-puppet</id>
   <content type="html">&lt;p&gt;Yesterday I presented the Vagrant &amp;amp; Puppet tools at the Rails Bar in
Rennes, to show how you can use these tools to easily provision virtual
machines that can be used as isolated development environments for your
projects. You’ll keep your development machine fast, your environments
isolated (+ they replicate your production setup), and any developer
will be able to get up and running on a new project in less than 5
minutes.&lt;/p&gt;

&lt;p&gt;If you’re interested, it’s available at
&lt;a href=&quot;http://crohr.me/presentations/vagrant-puppet/&quot;&gt;http://crohr.me/presentations/vagrant-puppet/&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The Toolbox</title>
   <link href="http://crohr.me/journal/2012/the-toolbox.html"/>
   <updated>2012-05-12T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/the-toolbox</id>
   <content type="html">&lt;p&gt;A collection of the best time-saving apps, tools, and widgets from around the web: &lt;a href=&quot;http://www.thetoolbox.cc/&quot;&gt;http://www.thetoolbox.cc/&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Selection of data visualization tools</title>
   <link href="http://crohr.me/journal/2012/selection-of-data-visualization-tools.html"/>
   <updated>2012-05-09T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/selection-of-data-visualization-tools</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://selection.datavisualization.ch/&quot;&gt;Datavisualization.ch Selected Tools&lt;/a&gt; is a collection of
tools that we, the people behind Datavisualization.ch, work with on
a daily basis and recommend warmly. This is not a list of everything
out there, but instead a thoughtfully curated selection of our
favourite tools that will make your life easier creating meaningful
and beautiful data visualizations.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Really useful reference for visualization tools.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Distributed Systems Design</title>
   <link href="http://crohr.me/journal/2012/distributed-systems-design.html"/>
   <updated>2012-05-09T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/distributed-systems-design</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;Blue Box is proud to present this series on understanding the basics
of distributed systems design. Stephen Balukoff, BBG’s Principal
Technologist, was surprised by the lack of practical information
available on the subject. He authored this document to help fill
the gap and hopefully start an exchange of information within the
community.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Very thorough tour of thoughts and choices to be made when working on the
design of distributed systems. This is a series of four articles:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.bluebox.net/news/2012/04/distributed-systems-design-part-1/&quot;&gt;Distributed Systems Design part 1&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.bluebox.net/news/2012/04/distributed-systems-design-part-2/&quot;&gt;Distributed Systems Design part 2&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.bluebox.net/news/2012/04/distributed-systems-design-part-3/&quot;&gt;Distributed Systems Design part 3&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.bluebox.net/news/2012/04/distributed-systems-design-part-4/&quot;&gt;Distributed Systems Design part 4&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Change of address</title>
   <link href="http://crohr.me/journal/2012/change-of-address.html"/>
   <updated>2012-05-09T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/change-of-address</id>
   <content type="html">&lt;p&gt;I’ve decided to move this collection of notes off of Tumblr and back to my
main site at &lt;a href=&quot;http://crohr.me&quot;&gt;crohr.me&lt;/a&gt;. Thanks to Feedburner, the Atom feed
address will stay the same, but it’s more than likely that you’ll get a large
list of new (but already published) articles in your feed reader due to the
switch.&lt;/p&gt;

&lt;p&gt;Tumblr is good, but I prefer adding articles without quitting my standard
workflow (text editor + git). Plus this will be better integrated with my main
site. For those interested, I used this &lt;a href=&quot;https://gist.github.com/867468&quot;&gt;simple migration script&lt;/a&gt; to
import the existing articles from Tumblr to my Jekyll-powered site.&lt;/p&gt;

&lt;p&gt;I also took the time to change the site design, and put in place a responsive
design based on &lt;a href=&quot;http://getskeleton.com/&quot;&gt;Skeleton&lt;/a&gt;. There is still a lot of
room for improvement, but I’m quite happy with the result.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Objective-C</title>
   <link href="http://crohr.me/journal/2012/objective-c.html"/>
   <updated>2012-05-05T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/objective-c</id>
   <content type="html">&lt;p&gt;In the ars technica article &lt;a href=&quot;http://arstechnica.com/business/news/2012/05/exclusive-building-ruby-ios-applications-with-rubymotion.ars/2&quot;&gt;Building native iOS apps with RubyMotion&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Objective-C methods are structured in such a way that their parameters are interspersed with the function name. This looks deceptively like conventional named parameters at first glance, but the behavior is different in practice.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ohhh yeah. That’s a key thing to understand when programming in Objective-C.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Workflow for keeping in sync the gh-pages auto-generated by Github</title>
   <link href="http://crohr.me/journal/2012/workflow-for-keeping-in-sync-the-gh-pages-auto-generated-by-github.html"/>
   <updated>2012-05-04T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/workflow-for-keeping-in-sync-the-gh-pages-auto-generated-by-github</id>
   <content type="html">&lt;p&gt;The automatic generation of project pages (http://pages.github.com) offered by Github is great, sicne you can use your README.md file as content for this site. The issue is that after the first initialization, if you change the README.md of your project, the gh-pages sites does not pick up the changes automatically. It was not obvious for me at first, but here is how you can (somewhat) keep your sanity when trying to keep your README.md file and your gh-pages sites in sync:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Convert your README.md to HTML (the Markdown Textmate bundle provides a shortcut for this, but you can use any command line tool as well).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Copy/paste that HTML between the &lt;code&gt;&amp;lt;section&amp;gt;&amp;lt;/section&amp;gt;&lt;/code&gt; of the main content div.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Check with jekyll that the rendering is ok: &lt;code&gt;jekyll --serve&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Commit and push.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I was very surprised to see that you have to do it manually by yourself (contrary to http://documentup.com for instance), but it’s not &lt;em&gt;that&lt;/em&gt; difficult after all.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>pkgr : Package your Rails app into deb or rpm packages</title>
   <link href="http://crohr.me/journal/2012/pkgr-package-your-rails-app-into-deb-or-rpm-packages.html"/>
   <updated>2012-05-04T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/pkgr-package-your-rails-app-into-deb-or-rpm-packages</id>
   <content type="html">&lt;p&gt;I just released &lt;a href=&quot;http://crohr.me/pkgr/&quot;&gt;pkgr&lt;/a&gt;, a gem that helps packaging your Rails app into a debian (DEB) package (RPM support is coming next). It’s still early days, but if you’re deploying on Debian Squeeze using Rails 3.2, it should work fine.&lt;/p&gt;

&lt;p&gt;In the short future I’ll have to verify that it works on existing apps :)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>One-liner to pretty print a JSON output on the command line</title>
   <link href="http://crohr.me/journal/2012/one-liner-to-pretty-print-a-json-output-on-the-command-line.html"/>
   <updated>2012-05-03T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/one-liner-to-pretty-print-a-json-output-on-the-command-line</id>
   <content type="html">&lt;p&gt;As a reminder, here is how you would pretty print a JSON output on the command line, with no additional dependencies except Python, which is most of the time available everywhere:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; curl -s &#39;http://twitter.com/users/crohr.json&#39; | python -mjson.tool
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>The Node Toolbox</title>
   <link href="http://crohr.me/journal/2012/the-node-toolbox.html"/>
   <updated>2012-04-29T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/the-node-toolbox</id>
   <content type="html">&lt;p&gt;Like the &lt;a href=&quot;https://www.ruby-toolbox.com/&quot;&gt;Ruby toolbox&lt;/a&gt;, but for Node.js: &lt;a href=&quot;http://toolbox.no.de/&quot;&gt;The Node Toolbox&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The Miso Project</title>
   <link href="http://crohr.me/journal/2012/the-miso-project.html"/>
   <updated>2012-04-26T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/the-miso-project</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://misoproject.com/&quot;&gt;The Miso Project&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yet another Javascript library for manipulating datasets. Here are &lt;a href=&quot;http://misoproject.com/dataset/examples.html&quot;&gt;some examples&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Cubism.js</title>
   <link href="http://crohr.me/journal/2012/cubism-js.html"/>
   <updated>2012-04-25T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/cubism-js</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://square.github.com/cubism/&quot;&gt;Cubism.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A D3.js plugin for visualizing time series. By the Square guys (again).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Startups, this is how design works</title>
   <link href="http://crohr.me/journal/2012/startups-this-is-how-design-works.html"/>
   <updated>2012-04-24T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/startups-this-is-how-design-works</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://startupsthisishowdesignworks.com/&quot;&gt;Startups, this is how design works&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Amber, Smalltalk brought to the web</title>
   <link href="http://crohr.me/journal/2012/amber-smalltalk-brought-to-the-web.html"/>
   <updated>2012-04-19T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/amber-smalltalk-brought-to-the-web</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://amber-lang.net&quot;&gt;Amber, Smalltalk brought to the web&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>What's next for HTTP</title>
   <link href="http://crohr.me/journal/2012/what-s-next-for-http.html"/>
   <updated>2012-04-05T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/what-s-next-for-http</id>
   <content type="html">&lt;p&gt;Mark Nottingham, about HTTP/1.1:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The HTTP/1.1 specification (RFC2616) was standardised in the mid-to-late 90’s. At the time, there was a lot of pressure to produce something quickly, because the Web was getting popular, and swamping a lot of networks in the process. As a result, the spec is somewhat garbled.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So here comes preliminary work towards HTTP/2.0:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;On Thursday, we started executing on a new charter that will see us do that by gathering requirements, soliciting proposals and — with a lot of work and a bit of luck — start working on HTTP/2.0 in a few months.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Good news!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Stamen maps</title>
   <link href="http://crohr.me/journal/2012/stamen-maps.html"/>
   <updated>2012-04-05T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/stamen-maps</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/images/posts/27.media.tumblr.com/tumblr_m1zw03MaGg1r4ghsio1_1280.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Three cool map tile sets from &lt;a href=&quot;http://maps.stamen.com&quot;&gt;Stamen&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This screenshot shows the &lt;a href=&quot;http://maps.stamen.com/watercolor/#12/37.7706/-122.3782&quot;&gt;Watercolor&lt;/a&gt; map. &lt;a href=&quot;http://maps.stamen.com/toner/#12/37.7706/-122.3782&quot;&gt;Toner&lt;/a&gt; and &lt;a href=&quot;http://maps.stamen.com/terrain/#12/37.7706/-122.3782&quot;&gt;Terrain&lt;/a&gt; also available.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Speaking of maps: a wind map</title>
   <link href="http://crohr.me/journal/2012/speaking-of-maps-a-wind-map.html"/>
   <updated>2012-04-05T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/speaking-of-maps-a-wind-map</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/images/posts/29.media.tumblr.com/tumblr_m1zwo791wY1r4ghsio1_1280.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Speaking of maps: a wind map&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Github Watchlist - A personal search engine for your watched repositories</title>
   <link href="http://crohr.me/journal/2012/github-watchlist-a-personal-search-engine-for-your-watched-repositories.html"/>
   <updated>2012-04-05T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/github-watchlist-a-personal-search-engine-for-your-watched-repositories</id>
   <content type="html">&lt;p&gt;Just finished a small personal project: &lt;a href=&quot;http://watchlist.crohr.me/&quot;&gt;Github Watchlist&lt;/a&gt;, a search engine that allows me to search into all my watched repositories on Github, with full-text indexing of all the README files of the projects. Here is an example query: &lt;a href=&quot;http://watchlist.crohr.me/crohr?q=rest+http&quot;&gt;http://watchlist.crohr.me/crohr?q=rest+http&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I created this because I find the Github search engine to be mostly useless. Sometimes I know I favorited (watched) a project, but can’t remember the name. And it seems like Github’s engine does not search into the READMEs, only the project’s descriptions (at their scale, I guess they have good reasons to do this?). Which leads to average results (at least in my case).&lt;/p&gt;

&lt;p&gt;The app uses &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt;, &lt;a href=&quot;http://expressjs.com/&quot;&gt;Express&lt;/a&gt;, the &lt;a href=&quot;http://api.github.com/&quot;&gt;Github API&lt;/a&gt;, and the awesome &lt;a href=&quot;http://elasticsearch.org/&quot;&gt;Elasticsearch&lt;/a&gt; engine. It’s crazy how easy it is to integrate and build on all those things so quickly.&lt;/p&gt;

&lt;p&gt;This project is mainly targeted at myself, but if you’re interested you can try to &lt;a href=&quot;http://watchlist.crohr.me/&quot;&gt;create your own search engine&lt;/a&gt;.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Tesseract - Fast Multidimensional Filtering for Coordinated Views.</title>
   <link href="http://crohr.me/journal/2012/tesseract-fast-multidimensional-filtering-for-coordinated-views.html"/>
   <updated>2012-03-19T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/tesseract-fast-multidimensional-filtering-for-coordinated-views</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/images/posts/24.media.tumblr.com/tumblr_m155vxlqP91r4ghsio1_1280.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tesseract - Fast Multidimensional Filtering for Coordinated Views.&lt;/p&gt;

&lt;p&gt;Fast is the important word here. Built on the always awesome &lt;a href=&quot;http://mbostock.github.com/d3/&quot;&gt;D3.js&lt;/a&gt; library.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Heroku for Java</title>
   <link href="http://crohr.me/journal/2012/heroku-for-java.html"/>
   <updated>2012-03-16T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/heroku-for-java</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://blog.heroku.com/archives/2011/8/25/java/&quot;&gt;Heroku for Java&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you’ve worked with Java before, the content of the hello-world sample app shown above may have surprised you. There is no “application container” in the J2EE sense; the app uses Jetty as an embedded webserver, just as one might use Unicorn for Ruby or Tornado for Python, or Jetty itself for Clojure.&lt;/p&gt;

  &lt;p&gt;The capabilities promised by J2EE application containers for managing your app include deployment, restart, logging, service binding (config), and clustering (horizontal scaling). Running your Java app on Heroku, you achieve these ends via the platform instead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Great news. There is also a link to a working JRuby example (even though JRuby is not officially supported yet).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>google-diff-match-patch</title>
   <link href="http://crohr.me/journal/2012/google-diff-match-patch.html"/>
   <updated>2012-03-15T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/google-diff-match-patch</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://code.google.com/p/google-diff-match-patch/&quot;&gt;google-diff-match-patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Diff, Match and Patch libraries for Plain Text. Available in Javascript, among other languages :)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Why James Whittaker Left Google</title>
   <link href="http://crohr.me/journal/2012/why-james-whittaker-left-google.html"/>
   <updated>2012-03-14T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/why-james-whittaker-left-google</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://blogs.msdn.com/b/jw_on_tech/archive/2012/03/13/why-i-left-google.aspx&quot;&gt;Why James Whittaker Left Google&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Google I was passionate about was a technology company that empowered its employees to innovate. The Google I left was an advertising company with a single corporate-mandated focus.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On Google+:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;As it turned out, sharing was not broken. Sharing was working fine and dandy, Google just wasn’t part of it. People were sharing all around us and seemed quite happy. A user exodus from Facebook never materialized. I couldn’t even get my own teenage daughter to look at Google+ twice, “social isn’t a product,” she told me after I gave her a demo, “social is people and the people are on Facebook.” Google was the rich kid who, after having discovered he wasn’t invited to the party, built his own party in retaliation. The fact that no one came to Google’s party became the elephant in the room.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I never used Google+ more than twice myself as well (that being said, I don’t use Facebook much, but at least it does not look like a ghost town).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Submarine Cable Map</title>
   <link href="http://crohr.me/journal/2012/submarine-cable-map.html"/>
   <updated>2012-02-29T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/submarine-cable-map</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/images/posts/26.media.tumblr.com/tumblr_m05b0bnk8b1r4ghsio1_1280.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.submarinecablemap.com/&quot;&gt;Submarine Cable Map&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>REST 101</title>
   <link href="http://crohr.me/journal/2012/rest-101.html"/>
   <updated>2012-02-28T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/rest-101</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://publish.luisrei.com/rest.html&quot;&gt;REST 101&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Quick start guide for designing RESTful Web APIs.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>HTTP Statuses</title>
   <link href="http://crohr.me/journal/2012/http-statuses.html"/>
   <updated>2012-02-28T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/http-statuses</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://httpstatus.es/&quot;&gt;HTTP Statuses&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Database of HTTP status codes with their IETF and Wikipedia descriptions.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Inventing on Principle</title>
   <link href="http://crohr.me/journal/2012/inventing-on-principle.html"/>
   <updated>2012-02-27T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/inventing-on-principle</id>
   <content type="html">&lt;p&gt;&lt;em&gt;Inventing on Principle&lt;/em&gt;, by &lt;a href=&quot;http://worrydream.com/&quot;&gt;Bret Victor&lt;/a&gt; - Really great talk and demos about the importance of visualization tools for creating and understanding things.&lt;/p&gt;

&lt;iframe src=&quot;http://player.vimeo.com/video/36579366?color=ffffff&quot; width=&quot;100%&quot; height=&quot;300&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;webkitAllowFullScreen&quot; allowfullscreen=&quot;allowFullScreen&quot;&gt;&amp;nbsp;&lt;/iframe&gt;

</content>
 </entry>
 
 <entry>
   <title>* { box-sizing: border-box } FTW</title>
   <link href="http://crohr.me/journal/2012/-box-sizing-border-box-ftw.html"/>
   <updated>2012-02-17T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/-box-sizing-border-box-ftw</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://paulirish.com/2012/box-sizing-border-box-ftw/&quot;&gt;* { box-sizing: border-box } FTW&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://paulirish.com/2012/box-sizing-border-box-ftw/&quot;&gt;Paul Irish&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;One of my least favorite parts about layout with CSS is the relationship of width and padding. You’re busy defining widths to match your grid or general column proportions, then down the line you start to add in text, which necessitates defining padding for those boxes. And ‘lo and behold, you now are subtracting pixels from your original width so the box doesn’t expand.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enter &lt;code&gt;box-sizing&lt;/code&gt; CSS property:&lt;/p&gt;

&lt;!-- code[css] --&gt;

&lt;pre&gt;&lt;code&gt;/* apply a natural box layout model to all elements */
* { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Didn’t know about that one. It’s safe to use according to &lt;a href=&quot;http://html5please.us/#box-sizing&quot;&gt;http://html5please.us/#box-sizing&lt;/a&gt;.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>SaaS Fatigue</title>
   <link href="http://crohr.me/journal/2012/saas-fatigue.html"/>
   <updated>2012-02-13T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/saas-fatigue</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://sachagreif.com/saas-fatigue/&quot;&gt;SaaS Fatigue&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sacha Greif:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Used to be, if you wanted a piece of software you clicked the “buy” button and voilà, you had your very own copy for life, and you didn’t need to pay again until the next major version (and even that was optional).&lt;/p&gt;

  &lt;p&gt;However these days it’s all about SaaS (Software as a Service): every app wants to charge you monthly or yearly.&lt;/p&gt;

  &lt;p&gt;But while paying for 2 or 3 (or even 4 or 5) services monthly is fine, I’m starting to worry that users will soon reach a saturation point.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Starting to feel the same. I recently canceled my &lt;a href=&quot;http://wufoo.com&quot;&gt;Wufoo&lt;/a&gt; account, which to me is the perfect example of the ‘Laziness Tax’ Sacha is talking about : it was too pricy for what I was using it for, but since I had important data in it it was somehow easier to still keep paying instead of taking the time to export the data.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Staying up with Node.JS</title>
   <link href="http://crohr.me/journal/2012/staying-up-with-node-js.html"/>
   <updated>2012-01-31T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/staying-up-with-node-js</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.devthought.com/2012/01/29/staying-up-with-node-js/&quot;&gt;Staying up with Node.JS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Zero-downtime reloads for Node.JS apps. The &lt;a href=&quot;https://github.com/LearnBoost/up#readme&quot;&gt;strategy&lt;/a&gt; is quite similar to the &lt;a href=&quot;http://unicorn.bogomips.org/SIGNALS.html&quot;&gt;Unicorn&lt;/a&gt; Ruby HTTP server.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>MongoDB Indexing in Practice</title>
   <link href="http://crohr.me/journal/2012/mongodb-indexing-in-practice.html"/>
   <updated>2012-01-27T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/mongodb-indexing-in-practice</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.cloudcomputingdevelopment.net/mongodb-indexing-in-practice/&quot;&gt;MongoDB Indexing in Practice&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;With the right indexes in place, MongoDB can use its hardware efficiently and serve your application’s queries quickly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Everything about unique, sparse, and multikey indexes in MongoDB.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fun with math</title>
   <link href="http://crohr.me/journal/2012/fun-with-math.html"/>
   <updated>2012-01-27T00:00:00+00:00</updated>
   <id>http://crohr.me/journal/2012/fun-with-math</id>
   <content type="html">&lt;a href=&quot;http://www.iheartchaos.com/post/16393143676/fun-with-math-dividing-one-by-998001-yields-a&quot;&gt;Fun with math: Dividing one by 998001 yields a surprising result&lt;/a&gt;

&lt;p&gt;&lt;a href=&quot;http://www.iheartchaos.com/post/16393143676/fun-with-math-dividing-one-by-998001-yields-a&quot; class=&quot;tumblr_blog&quot;&gt;iheartchaos&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://media.tumblr.com/tumblr_lya93spLjr1qzozj1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;There’s all sorts of magic to be had with numbers, and many mathematicians have made entire careers in finding these little tricks that are mostly useless, but fun anyway. Unfortunately, a lot of calculators are going to truncate the results of this trick, but if you manage to get a hold of...&lt;/p&gt;&lt;/blockquote&gt;
</content>
 </entry>
 
 
</feed>